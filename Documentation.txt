---------------ДОКУМЕНТАЦИЯ---------------

Таблица User:

	https://#####/user - POST запрос
	- Создание нового пользователя
	Принимает JSON формата:
	user = {
		"username": "username",
		"email": "mail@mail.ru",
		"password": "hash_of_password",
		"image": "https://url_of_image.png",
		"role": "Admin"/"User"
		}
	- В качестве роли указать одну из строк ("Admin", либо "User")
	- image - фото профиля пользователя
	- При отсутствии изображения, указать в поле image пустую строку 
	
	
	https://#####/user/<username> - GET запрос
	- Получение информации о существующем пользователе по его нику
	Возвращает JSON формата:
	result = {
        "username": "username",
		"email": "mail@mail.ru",
		"password": "hash_of_password",
		"role": "Admin"/"User"б
		"image": "https://url_of_image.png",
		"count": 0
    }
	- count - количество посещений мероприятий этим пользователем
	
	
	https://#####/route - POST запрос
	- Создание нового маршрута
	Принимает JSON формата:
	route = {
		"title": "title",
		"description": "description",
		"image": "https://url_of_image.png",
		"edge_1": [x1, y1],
		"edge_2": [x2, y2]
	}
	- x, y - широта и долгота в формате float
	- edge - координаты углов границ
	- При отсутствии изображения, указать в поле image пустую строку 
	
	
	https://#####/route/<id> - GET запрос
	- Получение маршрута по его id
	- Чтобы получить все существующие маршруты, указать id = 0
	Возвращает JSON формата:
	 - Если указан id = 0:
	route = {
		"title": "title",
		"description": "description",
		"image": "https://url_of_image.png",
		"edge_1": [x1, y1],
		"edge_2": [x2, y2]
	}
	 - Если указан другой id > 0:
	result = {
		"routes": [
			{
				"id": "id_1",
				"title": "title_1",
				"description": "description_1",
				"image": "https://url_of_image.png",
				"edge_1": [x1, y1],
				"edge_2": [x2, y2]
			},
			{
				"id": "id_2",
				"title": "title_2",
				"description": "description_2",
				"image": "https://url_of_image.png",
				"edge_1": [x1, y1],
				"edge_2": [x2, y2]
			},
			...
		]
	}
	
	
	https://#####/route/<id> - DELETE запрос
	- Удаление маршрута №id и принадлежащих ему точек
	
	
	https://#####/point - POST запрос
	- Создание новой точки/множества точек
	Принимает JSON формата:
	 - Чтобы создать одну точку:
	route = {
		"title": "title",
		"description": "description",
		"image": "https://url_of_image.png",
		"location": [x, y],
		"route_id": 0
	}
	 - Чтобы создать множество точек:
	request = {
		"points": [
			{
				"title": "title_1",
				"description": "description_1",
				"image": "https://url_of_image.png",
				"location": [x, y]
			},
			{
				"title": "title_2",
				"description": "description_2",
				"image": "https://url_of_image.png",
				"location": [x, y]
			},
			...
		],
		"route_id": 0
	}
	- x, y - широта и долгота в формате float
	- route_id - id маршрута, которому принадлежит точка (целочисленного типа)
	
	
	https://#####/point/<id> - GET запрос
	- Получение списка точек по id маршрута
	Возвращает JSON формата:
	result = {
		"points": [
			{
				"id": "id_1",
				"title": "title_1",
				"description": "description_1",
				"image": "https://url_of_image.png",
				"location": [x, y]
			},
			{
				"id": "id_2",
				"title": "title_2",
				"description": "description_2",
				"image": "https://url_of_image.png",
				"location": [x, y]
			},
			...
		]
	}
	- x, y - широта и долгота в формате float
	
	
	https://#####/point/<id> - DELETE запрос
	- Удаление точки №id
	
	
	https://#####/event - POST запрос
	- Создание нового мероприятия
	Принимает JSON формата:
	event = {
		"title": "title",
		"description": "description",
		"image": "https://url_of_image.png"
		"date": [year, month, day, hour, minute]
	}
	- При отсутствии изображения, указать в поле image пустую строку
	- Поле date - список чисел
	
	
	https://#####/event/<time> - GET запрос
	- Параметр time принимает значения: "past", "future", id
	Возвращает JSON формата:
	 - Если указан time = "past" (все мероприятия), time = "future" (мероприятия, которые ещё не прошли), time = "all" (вывод всех мероприятий), либо time = “year month day”, где year, month, day - соответствующие числа (вывод всех мероприятий в определенный день)
	result = {
		"events": [
			{
				"title": "title_1",
				"description": "description_1",
				"image": "https://url_of_image.png",
				"date": [year, month, day, hour, minute]
			},
			{
				"title": "title_2",
				"description": "description_2",
				"image": "https://url_of_image.png",
				"date": [year, month, day, hour, minute]
			},
			...
		]
	}
	 - Если указан time как число - id определенного мероприятия:
	event = {
		"title": "title",
		"description": "description",
		"image": "https://url_of_image.png"
		"date": [year, month, day, hour, minute]
	}
	
	
	https://#####/event/<id> - DELETE запрос
	- Удаление мероприятия №id
	